{"ast":null,"code":"var _jsxFileName = \"C:\\\\dsbda\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Alert } from 'react-bootstrap';\nimport DiabetesForm from './components/DiabetesForm';\nimport PredictionResult from './components/PredictionResult';\nimport Header from './components/Header';\nimport InfoSection from './components/InfoSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [predictionResult, setPredictionResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [apiStatus, setApiStatus] = useState({\n    isChecking: true,\n    isOnline: false,\n    message: 'Checking API status...'\n  });\n\n  // Define the API base URL\n  // Try localhost explicitly with protocol\n  const API_BASE_URL = 'http://127.0.0.1:5000';\n\n  // Check if the API is available on component mount\n  useEffect(() => {\n    const checkApiStatus = async () => {\n      try {\n        console.log('Checking API status at:', `${API_BASE_URL}/api/health`);\n        const response = await fetch(`${API_BASE_URL}/api/health`, {\n          mode: 'cors',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('API status response:', response);\n        if (response.ok) {\n          setApiStatus({\n            isChecking: false,\n            isOnline: true,\n            message: 'API is connected'\n          });\n        } else {\n          setApiStatus({\n            isChecking: false,\n            isOnline: false,\n            message: 'API is not responding correctly'\n          });\n        }\n      } catch (err) {\n        console.error('API connection error:', err);\n        setApiStatus({\n          isChecking: false,\n          isOnline: false,\n          message: 'Cannot connect to the API server. Make sure the backend is running.'\n        });\n      }\n    };\n    checkApiStatus();\n  }, []);\n  const handlePrediction = async formData => {\n    setLoading(true);\n    setError(null);\n    try {\n      console.log('Sending prediction request with data:', formData);\n      const response = await fetch(`${API_BASE_URL}/api/predict`, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      console.log('Response status:', response.status);\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Error response:', errorText);\n        throw new Error(`Failed to get prediction from server: ${response.status} ${response.statusText}`);\n      }\n      const data = await response.json();\n      console.log('Prediction result:', data);\n      setPredictionResult(data);\n    } catch (err) {\n      console.error('Error during prediction:', err);\n      setError(err.message || 'An error occurred during prediction');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [!apiStatus.isChecking && !apiStatus.isOnline && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        className: \"mt-3\",\n        children: apiStatus.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(InfoSection, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(DiabetesForm, {\n            onSubmit: handlePrediction,\n            isLoading: loading,\n            isDisabled: !apiStatus.isOnline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(PredictionResult, {\n            result: predictionResult,\n            loading: loading,\n            error: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"neVa3DBIMvO0OdrpLZy3XWeVlk8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Alert","DiabetesForm","PredictionResult","Header","InfoSection","jsxDEV","_jsxDEV","App","_s","predictionResult","setPredictionResult","loading","setLoading","error","setError","apiStatus","setApiStatus","isChecking","isOnline","message","API_BASE_URL","checkApiStatus","console","log","response","fetch","mode","headers","ok","err","handlePrediction","formData","method","body","JSON","stringify","status","errorText","text","Error","statusText","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","md","onSubmit","isLoading","isDisabled","result","_c","$RefreshReg$"],"sources":["C:/dsbda/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Alert } from 'react-bootstrap';\r\nimport DiabetesForm from './components/DiabetesForm';\r\nimport PredictionResult from './components/PredictionResult';\r\nimport Header from './components/Header';\r\nimport InfoSection from './components/InfoSection';\r\n\r\nfunction App() {\r\n  const [predictionResult, setPredictionResult] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [apiStatus, setApiStatus] = useState({ isChecking: true, isOnline: false, message: 'Checking API status...' });\r\n\r\n  // Define the API base URL\r\n  // Try localhost explicitly with protocol\r\n  const API_BASE_URL = 'http://127.0.0.1:5000';\r\n\r\n  // Check if the API is available on component mount\r\n  useEffect(() => {\r\n    const checkApiStatus = async () => {\r\n      try {\r\n        console.log('Checking API status at:', `${API_BASE_URL}/api/health`);\r\n        const response = await fetch(`${API_BASE_URL}/api/health`, {\r\n          mode: 'cors',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        \r\n        console.log('API status response:', response);\r\n        \r\n        if (response.ok) {\r\n          setApiStatus({ \r\n            isChecking: false, \r\n            isOnline: true, \r\n            message: 'API is connected' \r\n          });\r\n        } else {\r\n          setApiStatus({ \r\n            isChecking: false, \r\n            isOnline: false, \r\n            message: 'API is not responding correctly' \r\n          });\r\n        }\r\n      } catch (err) {\r\n        console.error('API connection error:', err);\r\n        setApiStatus({ \r\n          isChecking: false, \r\n          isOnline: false, \r\n          message: 'Cannot connect to the API server. Make sure the backend is running.' \r\n        });\r\n      }\r\n    };\r\n\r\n    checkApiStatus();\r\n  }, []);\r\n\r\n  const handlePrediction = async (formData) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      console.log('Sending prediction request with data:', formData);\r\n      \r\n      const response = await fetch(`${API_BASE_URL}/api/predict`, {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n      \r\n      console.log('Response status:', response.status);\r\n      \r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error('Error response:', errorText);\r\n        throw new Error(`Failed to get prediction from server: ${response.status} ${response.statusText}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('Prediction result:', data);\r\n      setPredictionResult(data);\r\n    } catch (err) {\r\n      console.error('Error during prediction:', err);\r\n      setError(err.message || 'An error occurred during prediction');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Container>\r\n        {!apiStatus.isChecking && !apiStatus.isOnline && (\r\n          <Alert variant=\"danger\" className=\"mt-3\">\r\n            {apiStatus.message}\r\n          </Alert>\r\n        )}\r\n        \r\n        <Row className=\"mb-4\">\r\n          <Col>\r\n            <InfoSection />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6}>\r\n            <DiabetesForm \r\n              onSubmit={handlePrediction} \r\n              isLoading={loading} \r\n              isDisabled={!apiStatus.isOnline}\r\n            />\r\n          </Col>\r\n          <Col md={6}>\r\n            <PredictionResult \r\n              result={predictionResult} \r\n              loading={loading} \r\n              error={error} \r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}