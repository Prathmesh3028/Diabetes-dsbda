{"ast":null,"code":"var _jsxFileName = \"C:\\\\dsbda\\\\frontend\\\\src\\\\components\\\\PredictionResult.js\";\nimport React from 'react';\nimport { Card, Alert, Spinner, ProgressBar } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PredictionResult({\n  result,\n  loading,\n  error\n}) {\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"result-container\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Analyzing Your Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"my-4\",\n          children: /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            role: \"status\",\n            variant: \"primary\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"visually-hidden\",\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"Please wait while our model analyzes your health data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"result-container\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          className: \"mt-3\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"Please try again or contact support if the problem persists.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n  if (!result) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"result-container\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Prediction Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"text-muted mt-3\",\n          children: \"Fill out the form and submit to see your diabetes risk prediction.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n  const riskPercentage = Math.round(result.probability * 100);\n  const riskVariant = result.prediction === 1 ? \"danger\" : \"success\";\n  const riskClass = result.prediction === 1 ? \"high-risk\" : \"low-risk\";\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"result-container\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: \"Prediction Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: `${riskClass} mb-3`,\n          children: result.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"Based on the information provided, our model predicts:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Risk Level:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), \" \", riskPercentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          variant: riskVariant,\n          now: riskPercentage,\n          className: \"mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"mt-3 small text-muted\",\n          children: \"This prediction is based on machine learning analysis of your health parameters. Remember that this is not a medical diagnosis. Please consult with a healthcare professional for proper evaluation.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_c = PredictionResult;\nexport default PredictionResult;\nvar _c;\n$RefreshReg$(_c, \"PredictionResult\");","map":{"version":3,"names":["React","Card","Alert","Spinner","ProgressBar","jsxDEV","_jsxDEV","PredictionResult","result","loading","error","className","children","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","animation","role","variant","Text","riskPercentage","Math","round","probability","riskVariant","prediction","riskClass","message","now","_c","$RefreshReg$"],"sources":["C:/dsbda/frontend/src/components/PredictionResult.js"],"sourcesContent":["import React from 'react';\r\nimport { Card, Alert, Spinner, ProgressBar } from 'react-bootstrap';\r\n\r\nfunction PredictionResult({ result, loading, error }) {\r\n  if (loading) {\r\n    return (\r\n      <Card className=\"result-container\">\r\n        <Card.Body className=\"text-center\">\r\n          <Card.Title>Analyzing Your Data</Card.Title>\r\n          <div className=\"my-4\">\r\n            <Spinner animation=\"border\" role=\"status\" variant=\"primary\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </Spinner>\r\n          </div>\r\n          <Card.Text>\r\n            Please wait while our model analyzes your health data...\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Card className=\"result-container\">\r\n        <Card.Body>\r\n          <Card.Title>Error</Card.Title>\r\n          <Alert variant=\"danger\" className=\"mt-3\">\r\n            {error}\r\n          </Alert>\r\n          <Card.Text>\r\n            Please try again or contact support if the problem persists.\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  if (!result) {\r\n    return (\r\n      <Card className=\"result-container\">\r\n        <Card.Body>\r\n          <Card.Title>Prediction Results</Card.Title>\r\n          <Card.Text className=\"text-muted mt-3\">\r\n            Fill out the form and submit to see your diabetes risk prediction.\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  const riskPercentage = Math.round(result.probability * 100);\r\n  const riskVariant = result.prediction === 1 ? \"danger\" : \"success\";\r\n  const riskClass = result.prediction === 1 ? \"high-risk\" : \"low-risk\";\r\n\r\n  return (\r\n    <Card className=\"result-container\">\r\n      <Card.Body>\r\n        <Card.Title>Prediction Results</Card.Title>\r\n        \r\n        <div className=\"mt-4\">\r\n          <h5 className={`${riskClass} mb-3`}>\r\n            {result.message}\r\n          </h5>\r\n          \r\n          <Card.Text>\r\n            Based on the information provided, our model predicts:\r\n          </Card.Text>\r\n          \r\n          <Card.Text className=\"mb-2\">\r\n            <strong>Risk Level:</strong> {riskPercentage}%\r\n          </Card.Text>\r\n          \r\n          <ProgressBar \r\n            variant={riskVariant} \r\n            now={riskPercentage} \r\n            className=\"mb-4\" \r\n          />\r\n          \r\n          <Card.Text className=\"mt-3 small text-muted\">\r\n            This prediction is based on machine learning analysis of your health parameters. \r\n            Remember that this is not a medical diagnosis. \r\n            Please consult with a healthcare professional for proper evaluation.\r\n          </Card.Text>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default PredictionResult; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,KAAK,EAAEC,OAAO,EAAEC,WAAW,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,SAASC,gBAAgBA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAM,CAAC,EAAE;EACpD,IAAID,OAAO,EAAE;IACX,oBACEH,OAAA,CAACL,IAAI;MAACU,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAChCN,OAAA,CAACL,IAAI,CAACY,IAAI;QAACF,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAChCN,OAAA,CAACL,IAAI,CAACa,KAAK;UAAAF,QAAA,EAAC;QAAmB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC5CZ,OAAA;UAAKK,SAAS,EAAC,MAAM;UAAAC,QAAA,eACnBN,OAAA,CAACH,OAAO;YAACgB,SAAS,EAAC,QAAQ;YAACC,IAAI,EAAC,QAAQ;YAACC,OAAO,EAAC,SAAS;YAAAT,QAAA,eACzDN,OAAA;cAAMK,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAC;YAAU;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eACNZ,OAAA,CAACL,IAAI,CAACqB,IAAI;UAAAV,QAAA,EAAC;QAEX;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAEX;EAEA,IAAIR,KAAK,EAAE;IACT,oBACEJ,OAAA,CAACL,IAAI;MAACU,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAChCN,OAAA,CAACL,IAAI,CAACY,IAAI;QAAAD,QAAA,gBACRN,OAAA,CAACL,IAAI,CAACa,KAAK;UAAAF,QAAA,EAAC;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC9BZ,OAAA,CAACJ,KAAK;UAACmB,OAAO,EAAC,QAAQ;UAACV,SAAS,EAAC,MAAM;UAAAC,QAAA,EACrCF;QAAK;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACRZ,OAAA,CAACL,IAAI,CAACqB,IAAI;UAAAV,QAAA,EAAC;QAEX;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAEX;EAEA,IAAI,CAACV,MAAM,EAAE;IACX,oBACEF,OAAA,CAACL,IAAI;MAACU,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAChCN,OAAA,CAACL,IAAI,CAACY,IAAI;QAAAD,QAAA,gBACRN,OAAA,CAACL,IAAI,CAACa,KAAK;UAAAF,QAAA,EAAC;QAAkB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC3CZ,OAAA,CAACL,IAAI,CAACqB,IAAI;UAACX,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAEvC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAEX;EAEA,MAAMK,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACjB,MAAM,CAACkB,WAAW,GAAG,GAAG,CAAC;EAC3D,MAAMC,WAAW,GAAGnB,MAAM,CAACoB,UAAU,KAAK,CAAC,GAAG,QAAQ,GAAG,SAAS;EAClE,MAAMC,SAAS,GAAGrB,MAAM,CAACoB,UAAU,KAAK,CAAC,GAAG,WAAW,GAAG,UAAU;EAEpE,oBACEtB,OAAA,CAACL,IAAI;IAACU,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAChCN,OAAA,CAACL,IAAI,CAACY,IAAI;MAAAD,QAAA,gBACRN,OAAA,CAACL,IAAI,CAACa,KAAK;QAAAF,QAAA,EAAC;MAAkB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAE3CZ,OAAA;QAAKK,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBN,OAAA;UAAIK,SAAS,EAAE,GAAGkB,SAAS,OAAQ;UAAAjB,QAAA,EAChCJ,MAAM,CAACsB;QAAO;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC,eAELZ,OAAA,CAACL,IAAI,CAACqB,IAAI;UAAAV,QAAA,EAAC;QAEX;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eAEZZ,OAAA,CAACL,IAAI,CAACqB,IAAI;UAACX,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACzBN,OAAA;YAAAM,QAAA,EAAQ;UAAW;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACK,cAAc,EAAC,GAC/C;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eAEZZ,OAAA,CAACF,WAAW;UACViB,OAAO,EAAEM,WAAY;UACrBI,GAAG,EAAER,cAAe;UACpBZ,SAAS,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eAEFZ,OAAA,CAACL,IAAI,CAACqB,IAAI;UAACX,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAC;QAI7C;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX;AAACc,EAAA,GArFQzB,gBAAgB;AAuFzB,eAAeA,gBAAgB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}